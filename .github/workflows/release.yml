name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create dist directory
      run: mkdir -p dist
      
    - name: Build and obfuscate
      run: |
        npm run minify
        npm run obfuscate
        npm run prepare-release
        
    - name: Verify build output
      run: |
        ls -la dist/
        ls -la script.min.js
        
    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
      
    - name: Upload release artifacts to GitHub release
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: |
          dist/script.min.js
          dist/script.obfuscated.js
          script.min.js
          
    - name: Trigger CDN deployment
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          if (release) {
            console.log(`Triggering CDN deployment for release ${release.tag_name}`);
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-cdn.yml',
              ref: 'main',
              inputs: {
                version: release.tag_name
              }
            });
          }