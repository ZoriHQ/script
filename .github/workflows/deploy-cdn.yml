name: Deploy to CDN

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  deploy-cdn:
    runs-on: ubuntu-latest
    
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create dist directory
      run: mkdir -p dist
      
    - name: Build and obfuscate
      run: |
        npm run minify
        npm run obfuscate
        npm run prepare-release
        
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
        else
          VERSION="${{ inputs.version }}"
        fi
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "📋 Deploying version: ${VERSION}"
        
    - name: Verify build output
      run: |
        echo "📊 Build artifacts:"
        ls -la script.min.js
        echo "📏 File size: $(wc -c < script.min.js) bytes"
        
    - name: Test Cloudflare API connection
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        echo "🔍 Testing Cloudflare API connection..."
        curl -s "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/tokens/verify" \
          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" | jq '.'
        
    - name: Make deployment script executable
      run: chmod +x .github/scripts/deploy-to-r2.js
      
    - name: Deploy to Cloudflare R2
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_R2_BUCKET_NAME: ${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}
        CLOUDFLARE_R2_CUSTOM_DOMAIN: ${{ secrets.CLOUDFLARE_R2_CUSTOM_DOMAIN }}
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        echo "🚀 Starting deployment to Cloudflare R2..."
        node .github/scripts/deploy-to-r2.js
        
    - name: Verify deployment
      env:
        CLOUDFLARE_R2_CUSTOM_DOMAIN: ${{ secrets.CLOUDFLARE_R2_CUSTOM_DOMAIN }}
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        echo "🔍 Verifying deployment..."
        sleep 10  # Wait for propagation
        
        # Test versioned URL
        VERSIONED_URL="https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/v$VERSION/script.min.js"
        echo "Testing: $VERSIONED_URL"
        if curl -s -f -I "$VERSIONED_URL" > /dev/null; then
          echo "✅ Versioned URL is accessible"
        else
          echo "❌ Versioned URL failed"
        fi
        
        # Test latest URL
        LATEST_URL="https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/latest/script.min.js"
        echo "Testing: $LATEST_URL"
        if curl -s -f -I "$LATEST_URL" > /dev/null; then
          echo "✅ Latest URL is accessible"
        else
          echo "❌ Latest URL failed"
        fi
        
        # Test root URL
        ROOT_URL="https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/script.min.js"
        echo "Testing: $ROOT_URL"
        if curl -s -f -I "$ROOT_URL" > /dev/null; then
          echo "✅ Root URL is accessible"
        else
          echo "❌ Root URL failed"
        fi
        
    - name: Create deployment summary
      env:
        CLOUDFLARE_R2_CUSTOM_DOMAIN: ${{ secrets.CLOUDFLARE_R2_CUSTOM_DOMAIN }}
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        echo "## 🎉 CDN Deployment Successful" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** \`$VERSION\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📍 Available URLs:" >> $GITHUB_STEP_SUMMARY
        echo "- **Versioned:** https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/v$VERSION/script.min.js" >> $GITHUB_STEP_SUMMARY
        echo "- **Latest:** https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/latest/script.min.js" >> $GITHUB_STEP_SUMMARY
        echo "- **Root:** https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/script.min.js" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Usage:" >> $GITHUB_STEP_SUMMARY
        echo '```html' >> $GITHUB_STEP_SUMMARY
        echo "<script src=\"https://$CLOUDFLARE_R2_CUSTOM_DOMAIN/script.min.js\" data-key=\"your-publishable-key\"></script>" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY